!function(t){function e(n){if(i[n])return i[n].exports;var a=i[n]={exports:{},id:n,loaded:!1};return t[n].call(a.exports,a,a.exports,e),a.loaded=!0,a.exports}var i={};return e.m=t,e.c=i,e.p="",e(0)}([function(t,e,i){!function(){if("undefined"==typeof AFRAME)return void console.error("Component attempted to register before AFRAME was available.");var t={draw:i(1).component};Object.keys(t).forEach(function(e){AFRAME.aframeCore?AFRAME.aframeCore.registerComponent(e,t[e]):AFRAME.registerComponent(e,t[e])})}()},function(t,e){t.exports.component={schema:{width:{"default":256},height:{"default":256},background:{"default":"#FFFFFF"}},init:function(){this.registers=[]},register:function(t){this.registers.push(t)},update:function(t){t||this.createCanvas(this.data.width,this.data.height)},createCanvas:function(t,e){var i=this,n=document.createElement("canvas");n.width=t,n.height=e,n.style="display: none",i.canvas=n,i.ctx=n.getContext("2d"),this.texture=new THREE.Texture(i.canvas),this.el.object3D.material=new THREE.MeshBasicMaterial,this.el.object3D.material.map=this.texture,this.el.hasLoaded?i.render():this.el.addEventListener("loaded",function(){i.render()})},render:function(){this.registers.length>0&&(this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle=this.data.background,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.registers.forEach(function(t){t()})),this.texture.needsUpdate=!0},remove:function(){}}}]);